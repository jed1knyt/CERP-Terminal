//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace CERPTerminal.CERPWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://cerp.com.ph/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemIDCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemFullDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasDuplicateWarehouseInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaterialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustWarehouseInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWarehouseInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsProdRequestPartialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseMatLotQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWarehouseRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductionInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentProductionQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveIfZeroQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustProductionInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductionInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::CERPTerminal.Properties.Settings.Default.CERPTerminal_CERPWS_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetItemIDCodeCompletedEventHandler GetItemIDCodeCompleted;
        
        /// <remarks/>
        public event GetItemDetailsCompletedEventHandler GetItemDetailsCompleted;
        
        /// <remarks/>
        public event GetItemFullDetailsCompletedEventHandler GetItemFullDetailsCompleted;
        
        /// <remarks/>
        public event HasInventoryCompletedEventHandler HasInventoryCompleted;
        
        /// <remarks/>
        public event HasDuplicateWarehouseInventoryCompletedEventHandler HasDuplicateWarehouseInventoryCompleted;
        
        /// <remarks/>
        public event GetMaterialsCompletedEventHandler GetMaterialsCompleted;
        
        /// <remarks/>
        public event GetWarehouseInventoryCompletedEventHandler GetWarehouseInventoryCompleted;
        
        /// <remarks/>
        public event GetPlanQtyCompletedEventHandler GetPlanQtyCompleted;
        
        /// <remarks/>
        public event AdjustWarehouseInventoryCompletedEventHandler AdjustWarehouseInventoryCompleted;
        
        /// <remarks/>
        public event UpdateWarehouseInventoryCompletedEventHandler UpdateWarehouseInventoryCompleted;
        
        /// <remarks/>
        public event IsProdRequestPartialCompletedEventHandler IsProdRequestPartialCompleted;
        
        /// <remarks/>
        public event GetWarehouseMatLotQtyCompletedEventHandler GetWarehouseMatLotQtyCompleted;
        
        /// <remarks/>
        public event UpdateWarehouseRequestCompletedEventHandler UpdateWarehouseRequestCompleted;
        
        /// <remarks/>
        public event AddProductionInventoryCompletedEventHandler AddProductionInventoryCompleted;
        
        /// <remarks/>
        public event GetCurrentProductionQuantityCompletedEventHandler GetCurrentProductionQuantityCompleted;
        
        /// <remarks/>
        public event RemoveIfZeroQtyCompletedEventHandler RemoveIfZeroQtyCompleted;
        
        /// <remarks/>
        public event AdjustProductionInventoryCompletedEventHandler AdjustProductionInventoryCompleted;
        
        /// <remarks/>
        public event UpdateProductionInventoryCompletedEventHandler UpdateProductionInventoryCompleted;
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/Login", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string _emp_id, string _pwd) {
            object[] results = this.Invoke("Login", new object[] {
                        _emp_id,
                        _pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string _emp_id, string _pwd) {
            this.LoginAsync(_emp_id, _pwd, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string _emp_id, string _pwd, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        _emp_id,
                        _pwd}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetItemIDCode", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemIDCode(string _bar_code) {
            object[] results = this.Invoke("GetItemIDCode", new object[] {
                        _bar_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemIDCodeAsync(string _bar_code) {
            this.GetItemIDCodeAsync(_bar_code, null);
        }
        
        /// <remarks/>
        public void GetItemIDCodeAsync(string _bar_code, object userState) {
            if ((this.GetItemIDCodeOperationCompleted == null)) {
                this.GetItemIDCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemIDCodeOperationCompleted);
            }
            this.InvokeAsync("GetItemIDCode", new object[] {
                        _bar_code}, this.GetItemIDCodeOperationCompleted, userState);
        }
        
        private void OnGetItemIDCodeOperationCompleted(object arg) {
            if ((this.GetItemIDCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemIDCodeCompleted(this, new GetItemIDCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetItemDetails", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemDetails(string _bar_code) {
            object[] results = this.Invoke("GetItemDetails", new object[] {
                        _bar_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDetailsAsync(string _bar_code) {
            this.GetItemDetailsAsync(_bar_code, null);
        }
        
        /// <remarks/>
        public void GetItemDetailsAsync(string _bar_code, object userState) {
            if ((this.GetItemDetailsOperationCompleted == null)) {
                this.GetItemDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDetailsOperationCompleted);
            }
            this.InvokeAsync("GetItemDetails", new object[] {
                        _bar_code}, this.GetItemDetailsOperationCompleted, userState);
        }
        
        private void OnGetItemDetailsOperationCompleted(object arg) {
            if ((this.GetItemDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDetailsCompleted(this, new GetItemDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetItemFullDetails", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemFullDetails(string _bar_code) {
            object[] results = this.Invoke("GetItemFullDetails", new object[] {
                        _bar_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemFullDetailsAsync(string _bar_code) {
            this.GetItemFullDetailsAsync(_bar_code, null);
        }
        
        /// <remarks/>
        public void GetItemFullDetailsAsync(string _bar_code, object userState) {
            if ((this.GetItemFullDetailsOperationCompleted == null)) {
                this.GetItemFullDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemFullDetailsOperationCompleted);
            }
            this.InvokeAsync("GetItemFullDetails", new object[] {
                        _bar_code}, this.GetItemFullDetailsOperationCompleted, userState);
        }
        
        private void OnGetItemFullDetailsOperationCompleted(object arg) {
            if ((this.GetItemFullDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemFullDetailsCompleted(this, new GetItemFullDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/HasInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasInventory(string _bar_code, string _item_type) {
            object[] results = this.Invoke("HasInventory", new object[] {
                        _bar_code,
                        _item_type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasInventoryAsync(string _bar_code, string _item_type) {
            this.HasInventoryAsync(_bar_code, _item_type, null);
        }
        
        /// <remarks/>
        public void HasInventoryAsync(string _bar_code, string _item_type, object userState) {
            if ((this.HasInventoryOperationCompleted == null)) {
                this.HasInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasInventoryOperationCompleted);
            }
            this.InvokeAsync("HasInventory", new object[] {
                        _bar_code,
                        _item_type}, this.HasInventoryOperationCompleted, userState);
        }
        
        private void OnHasInventoryOperationCompleted(object arg) {
            if ((this.HasInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasInventoryCompleted(this, new HasInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/HasDuplicateWarehouseInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasDuplicateWarehouseInventory(int _item_id, string _item_type, string _invoice_no, string _lot_no) {
            object[] results = this.Invoke("HasDuplicateWarehouseInventory", new object[] {
                        _item_id,
                        _item_type,
                        _invoice_no,
                        _lot_no});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasDuplicateWarehouseInventoryAsync(int _item_id, string _item_type, string _invoice_no, string _lot_no) {
            this.HasDuplicateWarehouseInventoryAsync(_item_id, _item_type, _invoice_no, _lot_no, null);
        }
        
        /// <remarks/>
        public void HasDuplicateWarehouseInventoryAsync(int _item_id, string _item_type, string _invoice_no, string _lot_no, object userState) {
            if ((this.HasDuplicateWarehouseInventoryOperationCompleted == null)) {
                this.HasDuplicateWarehouseInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasDuplicateWarehouseInventoryOperationCompleted);
            }
            this.InvokeAsync("HasDuplicateWarehouseInventory", new object[] {
                        _item_id,
                        _item_type,
                        _invoice_no,
                        _lot_no}, this.HasDuplicateWarehouseInventoryOperationCompleted, userState);
        }
        
        private void OnHasDuplicateWarehouseInventoryOperationCompleted(object arg) {
            if ((this.HasDuplicateWarehouseInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasDuplicateWarehouseInventoryCompleted(this, new HasDuplicateWarehouseInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetMaterials", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMaterials() {
            object[] results = this.Invoke("GetMaterials", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMaterialsAsync() {
            this.GetMaterialsAsync(null);
        }
        
        /// <remarks/>
        public void GetMaterialsAsync(object userState) {
            if ((this.GetMaterialsOperationCompleted == null)) {
                this.GetMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaterialsOperationCompleted);
            }
            this.InvokeAsync("GetMaterials", new object[0], this.GetMaterialsOperationCompleted, userState);
        }
        
        private void OnGetMaterialsOperationCompleted(object arg) {
            if ((this.GetMaterialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaterialsCompleted(this, new GetMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetWarehouseInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarehouseInventory(int _item_id) {
            object[] results = this.Invoke("GetWarehouseInventory", new object[] {
                        _item_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseInventoryAsync(int _item_id) {
            this.GetWarehouseInventoryAsync(_item_id, null);
        }
        
        /// <remarks/>
        public void GetWarehouseInventoryAsync(int _item_id, object userState) {
            if ((this.GetWarehouseInventoryOperationCompleted == null)) {
                this.GetWarehouseInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseInventoryOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseInventory", new object[] {
                        _item_id}, this.GetWarehouseInventoryOperationCompleted, userState);
        }
        
        private void OnGetWarehouseInventoryOperationCompleted(object arg) {
            if ((this.GetWarehouseInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseInventoryCompleted(this, new GetWarehouseInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetPlanQty", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetPlanQty(int _item_id, string _tracking_no) {
            object[] results = this.Invoke("GetPlanQty", new object[] {
                        _item_id,
                        _tracking_no});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanQtyAsync(int _item_id, string _tracking_no) {
            this.GetPlanQtyAsync(_item_id, _tracking_no, null);
        }
        
        /// <remarks/>
        public void GetPlanQtyAsync(int _item_id, string _tracking_no, object userState) {
            if ((this.GetPlanQtyOperationCompleted == null)) {
                this.GetPlanQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanQtyOperationCompleted);
            }
            this.InvokeAsync("GetPlanQty", new object[] {
                        _item_id,
                        _tracking_no}, this.GetPlanQtyOperationCompleted, userState);
        }
        
        private void OnGetPlanQtyOperationCompleted(object arg) {
            if ((this.GetPlanQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanQtyCompleted(this, new GetPlanQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/AdjustWarehouseInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdjustWarehouseInventory(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, int _destination_terminal_id) {
            object[] results = this.Invoke("AdjustWarehouseInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _mat_lot_no,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks,
                        _destination_terminal_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustWarehouseInventoryAsync(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, int _destination_terminal_id) {
            this.AdjustWarehouseInventoryAsync(_type, _item_id, _item_type, _tracking_no, _prod_lot_no, _mat_lot_no, _terminal_id, _terminal_device_id, _status, _qty, _remarks, _destination_terminal_id, null);
        }
        
        /// <remarks/>
        public void AdjustWarehouseInventoryAsync(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, int _destination_terminal_id, object userState) {
            if ((this.AdjustWarehouseInventoryOperationCompleted == null)) {
                this.AdjustWarehouseInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustWarehouseInventoryOperationCompleted);
            }
            this.InvokeAsync("AdjustWarehouseInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _mat_lot_no,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks,
                        _destination_terminal_id}, this.AdjustWarehouseInventoryOperationCompleted, userState);
        }
        
        private void OnAdjustWarehouseInventoryOperationCompleted(object arg) {
            if ((this.AdjustWarehouseInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustWarehouseInventoryCompleted(this, new AdjustWarehouseInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/UpdateWarehouseInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWarehouseInventory(string _type, int _item_id, string _item_type, string _invoice_no, string _lot_no, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            object[] results = this.Invoke("UpdateWarehouseInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _invoice_no,
                        _lot_no,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWarehouseInventoryAsync(string _type, int _item_id, string _item_type, string _invoice_no, string _lot_no, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            this.UpdateWarehouseInventoryAsync(_type, _item_id, _item_type, _invoice_no, _lot_no, _terminal_id, _terminal_device_id, _status, _qty, _remarks, null);
        }
        
        /// <remarks/>
        public void UpdateWarehouseInventoryAsync(string _type, int _item_id, string _item_type, string _invoice_no, string _lot_no, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, object userState) {
            if ((this.UpdateWarehouseInventoryOperationCompleted == null)) {
                this.UpdateWarehouseInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWarehouseInventoryOperationCompleted);
            }
            this.InvokeAsync("UpdateWarehouseInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _invoice_no,
                        _lot_no,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks}, this.UpdateWarehouseInventoryOperationCompleted, userState);
        }
        
        private void OnUpdateWarehouseInventoryOperationCompleted(object arg) {
            if ((this.UpdateWarehouseInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWarehouseInventoryCompleted(this, new UpdateWarehouseInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/IsProdRequestPartial", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsProdRequestPartial() {
            object[] results = this.Invoke("IsProdRequestPartial", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsProdRequestPartialAsync() {
            this.IsProdRequestPartialAsync(null);
        }
        
        /// <remarks/>
        public void IsProdRequestPartialAsync(object userState) {
            if ((this.IsProdRequestPartialOperationCompleted == null)) {
                this.IsProdRequestPartialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProdRequestPartialOperationCompleted);
            }
            this.InvokeAsync("IsProdRequestPartial", new object[0], this.IsProdRequestPartialOperationCompleted, userState);
        }
        
        private void OnIsProdRequestPartialOperationCompleted(object arg) {
            if ((this.IsProdRequestPartialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProdRequestPartialCompleted(this, new IsProdRequestPartialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetWarehouseMatLotQty", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetWarehouseMatLotQty(int _item_id, string _mat_lot) {
            object[] results = this.Invoke("GetWarehouseMatLotQty", new object[] {
                        _item_id,
                        _mat_lot});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseMatLotQtyAsync(int _item_id, string _mat_lot) {
            this.GetWarehouseMatLotQtyAsync(_item_id, _mat_lot, null);
        }
        
        /// <remarks/>
        public void GetWarehouseMatLotQtyAsync(int _item_id, string _mat_lot, object userState) {
            if ((this.GetWarehouseMatLotQtyOperationCompleted == null)) {
                this.GetWarehouseMatLotQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseMatLotQtyOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseMatLotQty", new object[] {
                        _item_id,
                        _mat_lot}, this.GetWarehouseMatLotQtyOperationCompleted, userState);
        }
        
        private void OnGetWarehouseMatLotQtyOperationCompleted(object arg) {
            if ((this.GetWarehouseMatLotQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseMatLotQtyCompleted(this, new GetWarehouseMatLotQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/UpdateWarehouseRequest", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWarehouseRequest(int _item_id, string _tracking_no, int _status, string _qty) {
            object[] results = this.Invoke("UpdateWarehouseRequest", new object[] {
                        _item_id,
                        _tracking_no,
                        _status,
                        _qty});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWarehouseRequestAsync(int _item_id, string _tracking_no, int _status, string _qty) {
            this.UpdateWarehouseRequestAsync(_item_id, _tracking_no, _status, _qty, null);
        }
        
        /// <remarks/>
        public void UpdateWarehouseRequestAsync(int _item_id, string _tracking_no, int _status, string _qty, object userState) {
            if ((this.UpdateWarehouseRequestOperationCompleted == null)) {
                this.UpdateWarehouseRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWarehouseRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateWarehouseRequest", new object[] {
                        _item_id,
                        _tracking_no,
                        _status,
                        _qty}, this.UpdateWarehouseRequestOperationCompleted, userState);
        }
        
        private void OnUpdateWarehouseRequestOperationCompleted(object arg) {
            if ((this.UpdateWarehouseRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWarehouseRequestCompleted(this, new UpdateWarehouseRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/AddProductionInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProductionInventory(int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            object[] results = this.Invoke("AddProductionInventory", new object[] {
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _lot_no,
                        _src_terminal_id,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddProductionInventoryAsync(int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            this.AddProductionInventoryAsync(_item_id, _item_type, _tracking_no, _prod_lot_no, _lot_no, _src_terminal_id, _terminal_id, _terminal_device_id, _status, _qty, _remarks, null);
        }
        
        /// <remarks/>
        public void AddProductionInventoryAsync(int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, object userState) {
            if ((this.AddProductionInventoryOperationCompleted == null)) {
                this.AddProductionInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductionInventoryOperationCompleted);
            }
            this.InvokeAsync("AddProductionInventory", new object[] {
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _lot_no,
                        _src_terminal_id,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks}, this.AddProductionInventoryOperationCompleted, userState);
        }
        
        private void OnAddProductionInventoryOperationCompleted(object arg) {
            if ((this.AddProductionInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductionInventoryCompleted(this, new AddProductionInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/GetCurrentProductionQuantity", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCurrentProductionQuantity(int _item_id, string _item_type, string _tracking_no, string _prod_lot_no) {
            object[] results = this.Invoke("GetCurrentProductionQuantity", new object[] {
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentProductionQuantityAsync(int _item_id, string _item_type, string _tracking_no, string _prod_lot_no) {
            this.GetCurrentProductionQuantityAsync(_item_id, _item_type, _tracking_no, _prod_lot_no, null);
        }
        
        /// <remarks/>
        public void GetCurrentProductionQuantityAsync(int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, object userState) {
            if ((this.GetCurrentProductionQuantityOperationCompleted == null)) {
                this.GetCurrentProductionQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentProductionQuantityOperationCompleted);
            }
            this.InvokeAsync("GetCurrentProductionQuantity", new object[] {
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no}, this.GetCurrentProductionQuantityOperationCompleted, userState);
        }
        
        private void OnGetCurrentProductionQuantityOperationCompleted(object arg) {
            if ((this.GetCurrentProductionQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentProductionQuantityCompleted(this, new GetCurrentProductionQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/RemoveIfZeroQty", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveIfZeroQty(int _item_id, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _terminal_id, decimal _qty) {
            object[] results = this.Invoke("RemoveIfZeroQty", new object[] {
                        _item_id,
                        _tracking_no,
                        _prod_lot_no,
                        _mat_lot_no,
                        _terminal_id,
                        _qty});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveIfZeroQtyAsync(int _item_id, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _terminal_id, decimal _qty) {
            this.RemoveIfZeroQtyAsync(_item_id, _tracking_no, _prod_lot_no, _mat_lot_no, _terminal_id, _qty, null);
        }
        
        /// <remarks/>
        public void RemoveIfZeroQtyAsync(int _item_id, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _terminal_id, decimal _qty, object userState) {
            if ((this.RemoveIfZeroQtyOperationCompleted == null)) {
                this.RemoveIfZeroQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveIfZeroQtyOperationCompleted);
            }
            this.InvokeAsync("RemoveIfZeroQty", new object[] {
                        _item_id,
                        _tracking_no,
                        _prod_lot_no,
                        _mat_lot_no,
                        _terminal_id,
                        _qty}, this.RemoveIfZeroQtyOperationCompleted, userState);
        }
        
        private void OnRemoveIfZeroQtyOperationCompleted(object arg) {
            if ((this.RemoveIfZeroQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveIfZeroQtyCompleted(this, new RemoveIfZeroQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/AdjustProductionInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustProductionInventory(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            object[] results = this.Invoke("AdjustProductionInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _mat_lot_no,
                        _src_terminal_id,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustProductionInventoryAsync(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            this.AdjustProductionInventoryAsync(_type, _item_id, _item_type, _tracking_no, _prod_lot_no, _mat_lot_no, _src_terminal_id, _terminal_id, _terminal_device_id, _status, _qty, _remarks, null);
        }
        
        /// <remarks/>
        public void AdjustProductionInventoryAsync(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _mat_lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, object userState) {
            if ((this.AdjustProductionInventoryOperationCompleted == null)) {
                this.AdjustProductionInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustProductionInventoryOperationCompleted);
            }
            this.InvokeAsync("AdjustProductionInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _mat_lot_no,
                        _src_terminal_id,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks}, this.AdjustProductionInventoryOperationCompleted, userState);
        }
        
        private void OnAdjustProductionInventoryOperationCompleted(object arg) {
            if ((this.AdjustProductionInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustProductionInventoryCompleted(this, new AdjustProductionInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/UpdateProductionInventory", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProductionInventory(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            object[] results = this.Invoke("UpdateProductionInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _lot_no,
                        _src_terminal_id,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductionInventoryAsync(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks) {
            this.UpdateProductionInventoryAsync(_type, _item_id, _item_type, _tracking_no, _prod_lot_no, _lot_no, _src_terminal_id, _terminal_id, _terminal_device_id, _status, _qty, _remarks, null);
        }
        
        /// <remarks/>
        public void UpdateProductionInventoryAsync(string _type, int _item_id, string _item_type, string _tracking_no, string _prod_lot_no, string _lot_no, int _src_terminal_id, int _terminal_id, int _terminal_device_id, int _status, decimal _qty, string _remarks, object userState) {
            if ((this.UpdateProductionInventoryOperationCompleted == null)) {
                this.UpdateProductionInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductionInventoryOperationCompleted);
            }
            this.InvokeAsync("UpdateProductionInventory", new object[] {
                        _type,
                        _item_id,
                        _item_type,
                        _tracking_no,
                        _prod_lot_no,
                        _lot_no,
                        _src_terminal_id,
                        _terminal_id,
                        _terminal_device_id,
                        _status,
                        _qty,
                        _remarks}, this.UpdateProductionInventoryOperationCompleted, userState);
        }
        
        private void OnUpdateProductionInventoryOperationCompleted(object arg) {
            if ((this.UpdateProductionInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductionInventoryCompleted(this, new UpdateProductionInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cerp.com.ph/test", RequestNamespace="http://cerp.com.ph/", ResponseNamespace="http://cerp.com.ph/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetItemIDCodeCompletedEventHandler(object sender, GetItemIDCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemIDCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemIDCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetItemDetailsCompletedEventHandler(object sender, GetItemDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetItemFullDetailsCompletedEventHandler(object sender, GetItemFullDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemFullDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemFullDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HasInventoryCompletedEventHandler(object sender, HasInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HasDuplicateWarehouseInventoryCompletedEventHandler(object sender, HasDuplicateWarehouseInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasDuplicateWarehouseInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasDuplicateWarehouseInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMaterialsCompletedEventHandler(object sender, GetMaterialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWarehouseInventoryCompletedEventHandler(object sender, GetWarehouseInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPlanQtyCompletedEventHandler(object sender, GetPlanQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AdjustWarehouseInventoryCompletedEventHandler(object sender, AdjustWarehouseInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustWarehouseInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustWarehouseInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWarehouseInventoryCompletedEventHandler(object sender, UpdateWarehouseInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWarehouseInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWarehouseInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsProdRequestPartialCompletedEventHandler(object sender, IsProdRequestPartialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProdRequestPartialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsProdRequestPartialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWarehouseMatLotQtyCompletedEventHandler(object sender, GetWarehouseMatLotQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseMatLotQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseMatLotQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWarehouseRequestCompletedEventHandler(object sender, UpdateWarehouseRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWarehouseRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWarehouseRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddProductionInventoryCompletedEventHandler(object sender, AddProductionInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProductionInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProductionInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentProductionQuantityCompletedEventHandler(object sender, GetCurrentProductionQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentProductionQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentProductionQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveIfZeroQtyCompletedEventHandler(object sender, RemoveIfZeroQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveIfZeroQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveIfZeroQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AdjustProductionInventoryCompletedEventHandler(object sender, AdjustProductionInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustProductionInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustProductionInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateProductionInventoryCompletedEventHandler(object sender, UpdateProductionInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductionInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductionInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591